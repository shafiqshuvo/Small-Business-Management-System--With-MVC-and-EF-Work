@model CompileError.Models.ProductModelView
@{
    Layout = "~/Views/Shared/_KLayout.cshtml";
}
@*Main Section *@

@section MyCSS
{
    @*table {
        width: 100%;
        padding: 30px 0px;
        box-sizing: border-box;
        margin: auto;
        }

        tr{
        padding:10px;
        text-align: left;
        }

        tr:nth-child(even) {
        background-color: #ddd;
        }*@
}

@* ..Main Section.. *@
<div class="panel panel-info">
    <div class="panel-heading">
        <h2 class="panel-title">Add new product</h2>
    </div>
    <div class="panel-body">
        @using (Html.BeginForm(FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(c => c.Code)
                @Html.TextBoxFor(c => c.Code, new { @class = "form-control", placeholder = "Enter Code" })
                @Html.ValidationMessageFor(c => c.Code, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(c => c.Name)
                @Html.TextBoxFor(c => c.Name,
                    new {@class = "form-control", placeholder="Enter Name"})
                @Html.ValidationMessageFor(c => c.Name,"",
                    new {@class = "text-danger"})
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.CategoryId)
                @Html.DropDownListFor(c => c.CategoryId, Model.CategorySelectListItems, "--Select--", new { @class = "form-control" })
                @Html.ValidationMessageFor(c => c.CategoryId,"",
                    new {@class = "text-danger"})
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.ReorderLevel)
                @Html.TextBoxFor(c => c.ReorderLevel,
                    new {@class = "form-control", placeholder="Enter reorder level", @type="number"})
                @Html.ValidationMessageFor(c => c.ReorderLevel,"",
                    new {@class = "text-danger"})
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.Description)
                @Html.TextBoxFor(c => c.Description,
                    new {@class = "form-control", placeholder="Enter Description"})
                @Html.ValidationMessageFor(c => c.Description,"",
                    new {@class = "text-danger"})
            </div>

            <input type="submit" value="Add" class="btn-lg btn-primary" />
        }
    </div>
</div>



@*<form method="post">
        <div class="form-group">
            <label>@Html.LabelFor(c => c.Code)</label>
            @Html.TextBoxFor(c => c.Code, Model.Code)
            <input type="text" class="form-control" id="exampleInputEmail1" placeholder="Email" value="Model.code">
        </div>
        <div class="form-group">
            <label for="exampleInputPassword1">Password</label>
            <input type="password" class="form-control" id="exampleInputPassword1" placeholder="Password">
        </div>
        <div class="form-group">
            <label for="exampleInputFile">File input</label>
            <input type="file" id="exampleInputFile">
            <p class="help-block">Example block-level help text here.</p>
        </div>
        <div class="checkbox">
            <label>
                <input type="checkbox"> Check me out
            </label>
        </div>
        <button type="submit" class="btn btn-default">Submit</button>
    </form>

    <div>
        <section>
            <form method="post" class="form">
                <div >
                    <label>@Html.LabelFor(c => c.Code)</label>
                    @Html.TextBoxFor(c => c.Code, Model.Code)
                    <p class="errorMessage">@Html.ValidationMessageFor(c => c.Code)</p>
                </div>
                <div >
                    <label>@Html.LabelFor(c => c.Name)</label>
                    @Html.TextBoxFor(c => c.Name, Model.Name)
                    <p class="errorMessage">@Html.ValidationMessageFor(c => c.Name)</p>
                </div>
                <div>
                    <label>@Html.LabelFor(c => c.CategoryId)</label>
                    <div class="dropDownList">@Html.DropDownListFor(c => c.CategoryId, Model.CategorySelectListItems, "--Select--")</div>
                    <p class="errorMessage">@Html.ValidationMessageFor(c => c.CategoryId)</p>
                </div>
                <div>
                    <label>@Html.LabelFor(c => c.ReorderLevel)</label>
                    @Html.TextBoxFor(c => c.ReorderLevel, Model.ReorderLevel)
                    <p class="errorMessage">@Html.ValidationMessageFor(c => c.ReorderLevel)</p>
                </div>
                <div>
                    <label>@Html.LabelFor(c => c.Description)</label>
                    @Html.TextBoxFor(c => c.Description, Model.Description)
                    <p class="errorMessage">@Html.ValidationMessageFor(c => c.Description)</p>
                </div>
                <div>
                    <input type="submit" value="ADD" />
                    @{
                        if (ViewBag.Message != null)
                        {
                            <h3>@ViewBag.Message</h3>
                        }
                    }
                </div>
            </form>
        </section>

    </div>*@

<div>
    @* .......Products Details *@
    @{
        Html.RenderPartial("~/Views/Shared/Product/_ProductDetails.cshtml", Model);
    }
</div>

@section MyScript
{
    <script src="~/Scripts/jquery-1.9.1.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
}
